{"version":3,"sources":["components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","addContact","this","className","onSubmit","placeholder","onChange","type","pattern","title","required","Component","Filter","ContactList","contacts","onDeliteContact","map","contact","onClick","id","shortid","require","App","filter","prevState","onFilter","find","toLowerCase","alert","generate","changeFilter","includes","localStorage","getItem","parseContacts","JSON","parse","prevProps","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0ec32fc8.chunk.js","sourcesContent":["import { Component } from \"react\";\nimport propTypes, { number } from \"prop-types\";\nimport \"./ContactForm.css\";\nexport default class ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n  handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n    this.setState({\n      [name]: value,\n    });\n  };\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    this.props.addContact(name, number);\n    this.setState({\n      name: \"\",\n      number: \"\",\n    });\n  };\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form className=\"contactForm\" onSubmit={this.handleSubmit}>\n        <label className=\"form__label\">\n          Name\n          <input\n            placeholder=\"Введите имя\"\n            className=\"form__input\"\n            onChange={this.handleChange}\n            value={name}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <br />\n        <label className=\"form__label\">\n          Number\n          <input\n            placeholder=\"Введите номер\"\n            className=\"form__input\"\n            onChange={this.handleChange}\n            value={number}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <br />\n        <button className=\"form__button\" type=\"submit\">\n          Add Contact\n        </button>\n      </form>\n    );\n  }\n}\nContactForm.propTypes = {\n  addContact: propTypes.func,\n};\n","import propTypes from \"prop-types\";\nexport default function Filter({ value, onChange }) {\n  return (\n    <label>\n      Find contacts by name\n      <input\n        onChange={onChange}\n        value={value}\n        type=\"text\"\n        name=\"filter\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n      />\n    </label>\n  );\n}\nFilter.propTypes = {\n  value: propTypes.string,\n  onChange: propTypes.func,\n};\n","import \"./ContactList.css\";\nimport propTypes from \"prop-types\";\nexport default function ContactList({ contacts, onDeliteContact }) {\n  return (\n    <ul className=\"contactList\">\n      {contacts.map((contact) => {\n        return (\n          <li className=\"contactItem\" key={contact.id}>\n            <div className=\"contactBlock\">\n              <sapn>{contact.name}</sapn>\n              <sapn className=\"nubmer\">{contact.number}</sapn>\n            </div>\n\n            <button\n              className=\"deleteBotton\"\n              onClick={() => {\n                onDeliteContact(contact.id);\n              }}\n              type=\"button\"\n            >\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\nContactList.propTypes = {\n  contacts: propTypes.array,\n  onDeliteContact: propTypes.func,\n};\n","import React, { Component } from \"react\";\nimport ContactForm from \"./components/ContactForm\";\nimport Filter from \"./components/Filter/\";\nimport ContactList from \"./components/ContactList/\";\nconst shortid = require(\"shortid\");\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n  componentDidMount() {\n    if (localStorage.getItem(\"contacts\")) {\n      const contacts = localStorage.getItem(\"contacts\");\n      const parseContacts = JSON.parse(contacts);\n      this.setState({ contacts: parseContacts });\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n  onDeliteContact = (id) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((contact) => contact.id !== id),\n    }));\n  };\n  onFilter = (e) => {\n    this.setState({\n      filter: e.currentTarget.value,\n    });\n  };\n  addContact = (name, number) => {\n    if (\n      this.state.contacts.find(\n        (contact) => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n    this.setState((prevState) => ({\n      contacts: [contact, ...this.state.contacts],\n    }));\n  };\n\n  changeFilter = () => {\n    return this.state.contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(this.state.filter.toLowerCase())\n    );\n  };\n  render() {\n    const visibleContacts = this.changeFilter();\n    const { filter } = this.state;\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm addContact={this.addContact} />\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.onFilter} />\n        <ContactList\n          contacts={visibleContacts}\n          onDeliteContact={this.onDeliteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}